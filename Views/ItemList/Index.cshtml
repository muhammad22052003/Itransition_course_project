@using CourseProject_backend.Models.ViewModels
@using CourseProject_backend.Enums.Entities
@using CourseProject_backend.Enums
@model ItemsViewModel
@{
    Layout = "_MainLayout";
    ViewData["Title"] = "Item list";
    ViewData.Add("Lang", Model.LanguagePack.Key);
}

@{
    if(Model.User != null && Model.User.Role.ToLower() == UserRoles.Admin.ToString().ToLower())
    {
        <div class="container control-panel" id="control-panel">
            <div class="row justify-content-center align-content-center header-col">
                <div class="col d-flex justify-content-center">
                    <button type="button" id="delete-button" onclick="deleteItem()" class="btn-style-header-smaller btn-main-header-color">
                        <img class="header-icon" src="https://drive.google.com/thumbnail?id=1-jMEYoBQO0Gw03LyLzgFwAZZxwMOoJFg">
                    </button>
                </div>
            </div>
        </div>
    }
}

@{
    if (Model.Items.Count == 0)
    {
        <section class="selection-items">
            <div class="container">
                <div class="row">
                    <div class="col">
                        @Model.LanguagePack.Value["list_empty"];
                    </div>
                </div>
            </div>
        </section>
    }
    else
    {
        <div class="container">
            <div class="row">
                <div class="col text-center d-flex justify-content-center">
                    <h1 class="d-flex text-center">@Model.LanguagePack.Value["items_word"]</h1>
                </div>
            </div>
            <div class="row">
                <div class="col text-center d-flex justify-content-center">
                    <button type="button" onclick="selectAll()" class="btn-style-header-smaller btn-main-selectall-color">
                        @Model.LanguagePack.Value["select_all"]
                    </button>
                </div>
                <div class="col text-center d-flex justify-content-center">
                    <button type="button" onclick="cancelAll()" class="btn-style-header-smaller btn-main-selectall-color">
                        @Model.LanguagePack.Value["cancel_all"]
                    </button>
                </div>
            </div>
        </div>
    }

    for (int i = 0; i < Model.Items.Count; i++)
    {
        <a href="~/item/index/@Model.LanguagePack.Key/@Model.Items[i].Id" class="text-decoration-none text-reset">
            <section class="selection-items">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            @{
                                if (Model.Items[i].ImageUrl != null && @Model.Items[i].ImageUrl != "")
                                {
                                    <img class="content-image" src="@Model.Items[i].ImageUrl">
                                }
                            }
                        </div>
                    </div>
                    <div class="row data-header">
                        <div class="col d-flex">
                            <input class="form-check-input data-checkbox" type="checkbox" name="itemId" value="@Model.Items[i].Id" id="select-field"/>
                            <h3>@Model.Items[i].Name</h3>
                        </div>
                        <div class="col d-flex justify-content-end">
                            <h6>Id : @Model.Items[i].Id</h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col d-flex justify-content-start">
                            <h6>@Model.LanguagePack.Value["created_word"] : @Model.Items[i].CreatedTime.Date.ToShortDateString()</h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col d-flex justify-content-start">
                            <h6>
                                @Model.LanguagePack.Value["collection_wor"] :
                                <a href="~/collection/index/@Model.LanguagePack.Key/@Model.Items[i].Collection.Id">@Model.Items[i].Collection.Name</a>
                            </h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="container">
                            <div class="row">
                                <div class="col text-center m-3"></div>
                            </div>
                            <div class="row">
                                <div class="col d-flex justify-content-center">
                                    <button value="@Model.Items[i].Id" class="btn-style-header-smaller btn-like-comment-color">
                                        <img class="like-comment-icon" src="https://drive.google.com/thumbnail?id=10F40NHwk-8EbXnbVyN0CGouzWiDwUgzQ">
                                    </button>
                                    <div class="like-comment-boundary">
                                    </div>
                                </div>
                                <div class="col d-flex justify-content-center">
                                    <button value="@Model.Items[i].Id" class="btn-style-header-smaller btn-like-comment-color">
                                        <img class="like-comment-icon" src="https://drive.google.com/thumbnail?id=1-CgCP4EKdshIjXr-fdIVjMlaS9ikDzZD">
                                    </button>
                                </div>
                                <div class="col d-flex justify-content-center">
                                    <button value="@Model.Items[i].Id" class="btn-style-header-smaller btn-like-comment-color">
                                        <img class="like-comment-icon" src="https://drive.google.com/thumbnail?id=10QNmmu9hUELSGUbhZKURx30xuPR-BFWV">
                                    </button>
                                </div>

                            </div>
                            @{
                                int posCount = 0;

                                if (Model.Items[i].PositiveReact != null)
                                {
                                    posCount = Model.Items[i].PositiveReact.Count;
                                }
                            }
                            <div class="row text-center">
                                <div class="col">
                                    <div class="like-comment-boundary">
                                        <h6>@posCount</h6>
                                    </div>
                                </div>
                                @{
                                    int comCount = 0;

                                    if (Model.Items[i].Comments != null)
                                    {
                                        comCount = Model.Items[i].Comments.Count;
                                    }
                                }
                                <div class="col">
                                    <div class="like-comment-boundary">
                                        <h6>@comCount</h6>
                                    </div>
                                </div>
                                @{
                                    int viewCount = 0;

                                    if (Model.Items[i].Views != null)
                                    {
                                        viewCount = Model.Items[i].Views.Count;
                                    }
                                }
                                <div class="col d-flex justify-content-center align-items-center">
                                    <div class="like-comment-boundary">
                                        <h6>@viewCount</h6>
                                    </div>
                                </div>
                            </div>
                            <div class="row d-flex justify-content-start">
                                <div class="col">
                                    <div class="like-comment-boundary">
                                        <img src="https://drive.google.com/thumbnail?id=1-o7YBwSAXf397zfjwPsq4pMetGykHIjl" class="like-comment-icon">
                                        @{
                                            if (Model.Items[i].Tags != null)
                                            {
                                                var tags = Model.Items[i].Tags.ToList();
                                                for (int j = 0; j < tags.Count; j++)
                                                {
                                                    <a href="~/itemlist/index?lang=@Model.LanguagePack.Key&filter=@ItemsDataFilter.byTag&value=@tags[j].Name">
                                                        #@(tags[j].Name)
                                                    </a>
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </a>
    }

    <section class="pages-section">
        <div class="container">
            <div class="row d-flex justify-content-center text-center">
                <div class="col">

                    @{
                        if (Model.CurrentPage > 1)
                        {
                            <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=Model.CurrentPage-1})" class="btn btn-page">
                                @{
                                    char a = '<';
                                }@a
                            </a>
                        }
                    }
                    @{
                        for (int i = 1; i <= Model.PagesCount; i++)
                        {
                            if (Model.CurrentPage == i)
                            {
                                <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn btn-page btn-page-current">@($"{i}")</a>
                            }
                            else if (i < Model.CurrentPage && i >= Model.CurrentPage - 3)
                            {
                                <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn btn-page">@($"{i}")</a>
                            }
                            else if (i > Model.CurrentPage && i <= Model.CurrentPage + 3)
                            {
                                <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn btn-page">@($"{i}")</a>
                            }
                            else
                            {
                                continue;
                            }
                        }
                    }
                    @{
                        if (Model.CurrentPage < Model.PagesCount)
                        {
                            <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=Model.CurrentPage-1})" class="btn btn-page">
                                >
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
    </section>
}