@using CourseProject_backend.Models.ViewModels
@using CourseProject_backend.Enums.Entities
@using CourseProject_backend.Enums
@model ItemsViewModel
@{
    Layout = "_MyLayout";
    ViewData["Title"] = "Item list";
    ViewData.Add("Lang", Model.LanguagePack.Key);
}

<div class="container">
    <div class="row mb-3">
        <div class="col d-flex justify-content-center">
            <h1>@Model.LanguagePack.Value["items_word"]</h1>
        </div>
    </div>
</div>

<div class="container">
    <div class="row mb-3">
        <div class="col d-flex justify-content-center">
            <button type="button" onclick="selectAll()" class="btn-all-select">
                @Model.LanguagePack.Value["select_all"]
            </button>
        </div>
        <div class="col d-flex justify-content-center">
            <button type="button" onclick="cancelAll()" class="btn-all-select">
                @Model.LanguagePack.Value["cancel_all"]
            </button>
        </div>
    </div>
</div>



<form method="post" action="~/item/delete">

    <input type="hidden" name="lang" value="@Model.LanguagePack.Key"/>

    @{
        if (Model.User != null && Model.User.IsAdmin())
        {
            <div class="container control-card">
                <div class="row mb-3 d-flex justify-content-center align-content-center">
                    <div class="col d-flex justify-content-center">
                        <button type="submit" id="delete-button" class="btn-all-select control-icon">
                            <img src="~/img/trash.png" style="width: 30px;">
                        </button>
                    </div>
                </div>
            </div>
        }
    }

    <main>
        <div class="container mt-3">

            @{
                for (int i = 0; i < Model.Items.Count; i++)
                {
                    <div class="row d-flex justify-content-center align-content-center mb-3">
                        <div class="col text-center">
                            <div class="container collection-card">
                                <div class="row mb-4">
                                    <div class="col d-flex">
                                        @{
                                            if (Model.User != null && Model.User.IsAdmin())
                                            {
                                                <input type="checkbox" name="itemId" value="@Model.Items[i].Id" id="select-field" class="form-check-input">
                                            }
                                        }
                                    </div>
                                    <div class="col d-flex justify-content-end align-content-center">
                                        <div class="font-size-10">
                                            id : @Model.Items[i].Id
                                        </div>
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col">
                                        <a href="@Url.Action("index","item",
                                            new{lang=Model.LanguagePack.Key,
                                            id=Model.Items[i].Id})">
                                            <div class="collection-header font-size-26">
                                                @Model.Items[i].Name
                                            </div>
                                        </a>
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col">
                                        <img src="~/img/like.png" style="width: 30px;">
                                        <P class="font-size-10">@Model.Items[i].PositiveReact.Count</P>
                                    </div>
                                    <div class="col">
                                        <img src="~/img/comment.png" style="width: 30px;">
                                        <P class="font-size-10">@Model.Items[i].Comments.Count</P>
                                    </div>
                                    <div class="col">
                                        <img src="~/img/eye.png" style="width: 30px;">
                                        <P class="font-size-10">@Model.Items[i].Views.Count</P>
                                    </div>
                                </div>
                                <div class="row font-size-14 mb-1">
                                    <div class="col">
                                        @Model.LanguagePack.Value["author_email"] : <u>@Model.Items[i].Collection.User.Email</u>
                                    </div>
                                </div>
                                <div class="row font-size-14 mb-1">
                                    <div class="col">
                                        @Model.LanguagePack.Value["created_word"] : <u>@Model.Items[i].CreatedTime.Date.ToShortDateString()</u>
                                    </div>
                                </div>
                                <div class="row font-size-14 mb-1">
                                    <div class="col">
                                        @Model.LanguagePack.Value["collection_wor"] : <a href="~/collection/index/@Model.LanguagePack.Key/@Model.Items[i].Collection.Id">@Model.Items[i].Collection.Name</a>
                                    </div>
                                </div>
                                <div class="row font-size-14">
                                    <div class="col">
                                        @{
                                            if (Model.Items[i].Tags != null)
                                            {
                                                var tags = Model.Items[i].Tags.ToList();
                                                for (int j = 0; j < tags.Count; j++)
                                                {
                                                    <a href="@Url.Action("index","itemlist",
                                                new{
                                                    lang = Model.LanguagePack.Key,
                                                    filter = ItemsDataFilter.byTag,
                                                    value = tags[j].Name
                                                    })">#@(tags[j].Name)</a>
                                                }
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            <div class="row d-flex justify-content-center align-content-center mb-3">
                <div class="col text-center">
                    <div class="container pagination-card">

                        @{
                            if (Model.CurrentPage > 1)
                            {
                                <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=Model.CurrentPage-1})" class="btn_cust btn-page-select">
                                    ⇐
                                </a>
                            }
                        }
                        @{
                            for (int i = 1; i <= Model.PagesCount; i++)
                            {
                                if (Model.CurrentPage == i)
                                {
                                    <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn_cust btn-page-select-current">@($"{i}")</a>
                                }
                                else if (i < Model.CurrentPage && i >= Model.CurrentPage - 3)
                                {
                                    <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn_cust btn-page-select">@($"{i}")</a>
                                }
                                else if (i > Model.CurrentPage && i <= Model.CurrentPage + 3)
                                {
                                    <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn_cust btn-page-select">@($"{i}")</a>
                                }
                                else
                                {
                                    continue;
                                }
                            }
                        }
                        @{
                            if (Model.CurrentPage < Model.PagesCount)
                            {
                                <a href="@Url.Action("index","itemlist",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=Model.CurrentPage+1})" class="btn_cust btn-page-select">
                                    ⇒
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </main>
</form>