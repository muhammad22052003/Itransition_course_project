@using CourseProject_backend.Models.ViewModels
@model UsersViewModel
@{
    Layout = "_MainLayout";
    ViewData["Title"] = "Users";
    ViewData.Add("Lang", Model.LanguagePack.Key);
}

<form method="post" id="users-action-form">

    @{
        if (Model.User != null && Model.User.IsAdmin())
        {
            <div class="container control-panel" id="control-panel">
                <div class="row justify-content-center align-content-center header-col">
                    <div class="col d-flex justify-content-center">
                        <button type="button" onclick="promote()" class="btn-style-header-smaller btn-main-header-color">
                            <img class="header-icon" src="https://drive.google.com/thumbnail?id=10sOE4pFFDOYk0Y_L2L2_xOkc2dk9bFHy">
                        </button>
                    </div>

                    <div class="col d-flex justify-content-center">
                        <button type="button" onclick="deleteUser()" class="btn-style-header-smaller btn-main-header-color">
                            <img class="header-icon" src="https://drive.google.com/thumbnail?id=1-jMEYoBQO0Gw03LyLzgFwAZZxwMOoJFg">
                        </button>
                    </div>

                    <div class="col d-flex justify-content-center">
                        <button type="button" onclick="demote()" class="btn-style-header-smaller btn-main-header-color">
                            <img class="header-icon" src="https://drive.google.com/thumbnail?id=10rcBBo417WizC_SbQzqiTDbQXGCQVObe">
                        </button>
                    </div>
                </div>
            </div>
        }
    }
    

    <div class="container">
        <div class="row">
            <div class="col text-center d-flex justify-content-center">
                <h1 class="d-flex text-center">@Model.LanguagePack.Value["users_word"]</h1>
            </div>
        </div>
        <div class="row">
            <div class="col text-center d-flex justify-content-center">
                <button type="button" onclick="selectAll()" class="btn-style-header-smaller btn-main-selectall-color">
                    @Model.LanguagePack.Value["select_all"]
                </button>
            </div>
            <div class="col text-center d-flex justify-content-center">
                <button type="button" onclick="cancelAll()" class="btn-style-header-smaller btn-main-selectall-color">
                    @Model.LanguagePack.Value["cancel_all"]
                </button>
            </div>
        </div>
    </div>

    @{
        if (Model.Users.Count == 0)
        {
            <section class="selection-items">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            @Model.LanguagePack.Value["users_word"];
                        </div>
                    </div>
                </div>
            </section>
        }

        for (int i = 0; i < Model.Users.Count; i++)
        {
            <a href="#" class="text-decoration-none text-reset">
                <section>
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <!--<img class="content-image" src="../img/content.jpg">-->
                            </div>
                        </div>
                        <div class="row data-header">
                            <div class="col d-flex">
                                <input id="select-field" name="userId" value="@Model.Users[i].Id" class="form-check-input data-checkbox" type="checkbox" />
                                <h3>@Model.Users[i].Name</h3>
                            </div>
                            <div class="col d-flex justify-content-end">
                                <h6>Id : @Model.Users[i].Id</h6>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col d-flex justify-content-start">
                                <h6>Email : @Model.Users[i].Email</h6>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col d-flex justify-content-start">
                                <h6>@Model.LanguagePack.Value["registrationDate_word"] : @Model.Users[i].RegistrationTime.Date.ToShortDateString()</h6>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col d-flex justify-content-start">
                                <h6>Status : @Model.Users[i].Role.ToUpper()</h6>
                            </div>
                        </div>
                    </div>
                </section>
            </a>
        }

        <section class="pages-section">
            <div class="container">
                <div class="row d-flex justify-content-center text-center">
                    <div class="col">

                        @{
                            if (Model.CurrentPage > 1)
                            {
                                <a href="@Url.Action("index","users",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=Model.CurrentPage-1})" class="btn btn-page">
                                    @{
                                        char a = '<';
                                    }@a
                                </a>
                            }
                        }
                        @{
                            for (int i = 1; i <= Model.PagesCount; i++)
                            {
                                if (Model.CurrentPage == i)
                                {
                                    <a href="@Url.Action("index","users",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn btn-page btn-page-current">@($"{i}")</a>
                                }
                                else if (i < Model.CurrentPage && i >= Model.CurrentPage - 3)
                                {
                                    <a href="@Url.Action("index","users",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn btn-page">@($"{i}")</a>
                                }
                                else if (i > Model.CurrentPage && i <= Model.CurrentPage + 3)
                                {
                                    <a href="@Url.Action("index","users",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=i})" class="btn btn-page">@($"{i}")</a>
                                }
                                else
                                {
                                    continue;
                                }
                            }
                        }
                        @{
                            if (Model.CurrentPage < Model.PagesCount)
                            {
                                <a href="@Url.Action("index","users",
                                    new{lang=Model.LanguagePack.Key,
                                    filter=Model.Filter.ToString(),
                                    value=Model.Value,
                                    sort=Model.Sort,
                                    page=Model.CurrentPage-1})" class="btn btn-page">
                                    >
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </section>
    }
</form>
<script src="~/js/usersControle.js"></script>